@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title User Story 009 - Sequence Diagram (SD)

autonumber

actor "Client" as ADM
participant ":LeaveMessageUI" as UI
participant ":LeaveMessageController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant ":propertyAnnouncementRepository:\nPropertyAnnouncementRepository" as PROPRepository
participant "CreatePropertyList" as ListEditor
participant "agentRepository:\nAgentRepository" as AgentRepository
participant ":authenticationRepository:\nAuthenticationRepository" as AUTHRepository
participant "userSession\n:User Session" as SESSION
participant "clientRepository\n:ClientRepository" as CLIENTRepository
participant "client\n:Client" as CLIENT
participant "propertyList:" as propertyList
participant "messageRepository:\nMessageRepository" as MSGRepository
participant ":Message" as Message

activate ADM

    ADM -> UI : asks to see properties to request a visit

    activate UI


        UI -> CTRL** : Creates

        UI -> CTRL : showPropertyList()

        activate CTRL


            CTRL -> RepositorySingleton : getInstance()

            activate RepositorySingleton

            RepositorySingleton --> CTRL: repositories

            deactivate RepositorySingleton


                CTRL -> PLAT : getPropertyRepository()

                activate PLAT

                PLAT --> CTRL: propertyRepository

                deactivate PLAT


                    CTRL -> PROPRepository: getProperties()

                    activate PROPRepository

                    PROPRepository --> CTRL: propertyList

                    deactivate PROPRepository

                CTRL -> UI : askAboutFilters()

deactivate CTRL








    UI --> ADM : asks if they only want to see 'for rent', 'for sale' or both

    deactivate UI

    ADM -> UI : answers the question

    activate UI

        alt answer isn't "both"
        UI -> CTRL : askAboutTypeOfSale(properties, scanner)
        activate CTRL
        CTRL -> ListEditor : getPropertiesWithXTypeOfSale(propertyList, type)
        activate ListEditor
        ListEditor -> ListEditor : create list with all the properties\nof the requested type
        ListEditor --> CTRL : propertyList
        deactivate ListEditor
        CTRL --> UI : propertyList
        deactivate CTRL
        end

    UI --> ADM : asks if they only want to see lands, apartments, houses or all of those

    deactivate UI


    ADM -> UI : answers the question

    activate UI

        alt answer isn't "all of them"
        UI -> CTRL : askAboutTypeOfProperty(properties, scanner)
        activate CTRL
        alt answer is land
        CTRL -> ListEditor : getPropertiesIfTheyAreLand(propertyList)
        activate ListEditor
        ListEditor -> ListEditor : create list with\nall the lands
        ListEditor --> CTRL : propertyList
        deactivate ListEditor

        else answer is apartment
        CTRL -> ListEditor : getPropertiesIfTheyAreApartment(propertyList)
        activate ListEditor
        ListEditor -> ListEditor : create list with\nall the apartments
        ListEditor --> CTRL : propertyList
        deactivate ListEditor

        else answer is house
        CTRL -> ListEditor : getPropertiesIfTheyAreLand(propertyList)
        activate ListEditor
        ListEditor -> ListEditor : create list with\nall the houses
        ListEditor --> CTRL : propertyList
        deactivate ListEditor
        end
        CTRL --> UI : propertyList
        deactivate CTRL
        end

    UI -> CTRL : getAgents()
    activate CTRL

    CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton

    RepositorySingleton --> CTRL: repositories
    deactivate RepositorySingleton

    CTRL -> PLAT : getAgentRepository()
    activate PLAT

    PLAT --> CTRL: agentRepository
    deactivate PLAT

    CTRL -> AgentRepository : getAgents()
    activate AgentRepository

    AgentRepository --> CTRL : agentList
    deactivate AgentRepository

    CTRL --> UI : agentList
    deactivate CTRL

    UI --> ADM : asks if the user wants to only see properties from a specific agent,\nprinting a list of all agents registered in the system

    deactivate UI

    ADM -> UI : answers the question (choosing one of the agents or none of them)

    activate UI

            alt answer isn't "none of them"
            UI -> CTRL : askAboutAgent(properties, scanner, agentList)
            activate CTRL
            CTRL -> ListEditor : getPropertiesByXAgent(propertyList, agentEmail)
            activate ListEditor
            ListEditor -> ListEditor : create list with all the properties\nof the requested type
            ListEditor --> CTRL : propertyList
            deactivate ListEditor
            CTRL --> UI : propertyList
            deactivate CTRL
            end






        UI -> CTRL : sortList()

        activate CTRL

        CTRL --> UI : propertiesList

        deactivate CTRL

    UI --> ADM : shows property list

    deactivate UI

    ADM -> UI : types the number of visit requests they want to make

    activate UI

    UI --> ADM : requests data to leave a message to the agent responsible for the \nproperty chosen in each iteration

    deactivate UI

    ADM -> UI : types requested data (text, preferred date, start of visit,\nend of visit)

    activate UI

        UI -> CTRL : createMessage(text, preferredDate, startOfVisit, endOfVisit)

        activate CTRL

            CTRL -> RepositorySingleton : getInstance()

            activate RepositorySingleton

            RepositorySingleton --> CTRL: repositories

            deactivate RepositorySingleton

                    CTRL -> PLAT : getAuthenticationRepository()

                    activate PLAT

                    PLAT --> CTRL: authenticationRepository

                    deactivate PLAT

                    CTRL -> AUTHRepository: getCurrentUserSession()

                    activate AUTHRepository

                    AUTHRepository --> CTRL: userSession

                    deactivate AUTHRepository

                    CTRL -> SESSION : getUserID

                    activate SESSION

                    SESSION --> CTRL : email

                    deactivate SESSION


                    CTRL -> PLAT : getClientRepository()

                    activate PLAT

                    PLAT --> CTRL: ClientRepository

                    deactivate PLAT

                    CTRL -> CLIENTRepository : getClientByEmail(email)

                    activate CLIENTRepository

                    CLIENTRepository --> CTRL : client

                    deactivate CLIENTRepository

                   CTRL -> CLIENT : getName()

                   activate CLIENT

                   CLIENT --> CTRL : name

                   deactivate CLIENT


                    CTRL -> CLIENT : getPhoneNumber()

                    activate CLIENT

                    CLIENT --> CTRL : phoneNumber

                    deactivate CLIENT

                    CTRL -> propertyList : selectProperty(propertyList);

                    activate propertyList

                    propertyList --> CTRL : property

                    deactivate propertyList

                    CTRL -> propertyList : getAgentEmail()

                    activate propertyList

                    propertyList --> CTRL : agentID

                    deactivate propertyList



                    CTRL -> PLAT : getMessageRepository()

                    activate PLAT

                    PLAT --> CTRL: messageRepository

                    deactivate PLAT

                    CTRL -> MSGRepository : createMessage(agentID, property, text, name, phoneNumber, preferredDate, startOfVisit, endOfVisit)

                    activate MSGRepository

                        MSGRepository -> Message** : create(text, name, phoneNumber, preferredDate, startOfVisit, endOfVisit)

                        MSGRepository -> MSGRepository : addMessage(message)

                        activate MSGRepository

                        MSGRepository -> MSGRepository: validateMessage(message)

                        activate MSGRepository

                        MSGRepository --> MSGRepository

                        deactivate MSGRepository

                        MSGRepository --> MSGRepository

                        deactivate MSGRepository

            MSGRepository --> CTRL : message

            deactivate MSGRepository

        CTRL --> UI : message

        deactivate CTRL

    UI --> ADM : displays operation success

deactivate UI

@enduml